version: "3"

services:
  back:
    build:
      context: .
      dockerfile: back/Dockerfile
    container_name: sogood-back
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./back:/app
    networks:
      - monitoring

  front:
    build:
      context: .
      dockerfile: front/Dockerfile
    container_name: sogood-front
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - back
    networks:
      - monitoring

  stream:
    build:
      context: .
      dockerfile: stream/Dockerfile
    container_name: sogood-stream
    restart: unless-stopped
    ports:
      - "8501:8501"
    depends_on:
      - back
    networks:
      - monitoring
  
  dozzle:
      container_name: dozzle
      image: amir20/dozzle:latest
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      ports:
        - "8082:8080"
      networks:
      - monitoring

  namenode:
      image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
      container_name: namenode
      networks:
        - prefect-net
      restart: always
      ports:
        - 9870:9870
        - 9000:9000
      volumes:
        - hadoop_namenode:/hadoop/dfs/name
        - ./datas:/datas
      environment:
        - CLUSTER_NAME=test
      env_file:
        - ./hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    networks:
      - prefect-net
    ports:
      - 9864:9864
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
      - ./datas:/datas
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
  
  spark-master:
    build:
      context: ./spark-master
      dockerfile: Dockerfile
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - prefect-net
    volumes:
      - ./datas:/datas
      - spark_home:/spark
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - PYSPARK_PYTHON=/usr/bin/python3
      - PYSPARK_DRIVER_PYTHON=/usr/bin/python3
  
  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    networks:
      - prefect-net
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - PYSPARK_PYTHON=/usr/bin/python3
      - PYSPARK_DRIVER_PYTHON=/usr/bin/python3
networks:
  prefect-net:
    driver: bridge
  monitoring:

volumes:
  hadoop_namenode:
  hadoop_datanode:
  spark_home: